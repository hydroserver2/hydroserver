version: '3.9'

services:
  # Django
  api:
    image: ghcr.io/hydroserver2/hydroserver-api-services:${HYDROSERVER_VERSION}
    command: gunicorn hydroserver.wsgi:application --bind 0.0.0.0:8000 --access-logfile - --error-logfile -
    volumes:
      - web:/app/web
      - static:/app/static
      - media:/app/media
      - logs:/app/logs
    environment:
      - DJANGO_SETTINGS_MODULE=hydroserver.settings
      - DATABASE_URL=${DATABASE_URL:-postgresql://hsdbadmin:changeme@postgres:5432/hydroserver}
      - PROXY_BASE_URL
      - SMTP_URL
      - DEFAULT_FROM_EMAIL
      - SECRET_KEY
      - DEBUG
      - ACCOUNT_SIGNUP_ENABLED
      - ACCOUNT_OWNERSHIP_ENABLED
      - SOCIALACCOUNT_SIGNUP_ONLY
      - ENABLE_AUDITS
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 10s
      timeout: 5s
      retries: 5

  # NodeJS
  node:
    image: node:18
    working_dir: /app
    entrypoint: /app/scripts/build-data-mgmt-app.sh
    environment:
      - GITHUB_REPO=https://github.com/hydroserver2/hydroserver-data-management-app.git
      - GITHUB_TAG=${HYDROSERVER_VERSION}
      - GOOGLE_MAPS_API_KEY
      - GOOGLE_MAPS_MAP_ID
      - PROXY_BASE_URL
    volumes:
      - ./scripts:/app/scripts:ro
      - web:/app/dist
      - logs:/app/logs
    restart: "no"

  # PostgreSQL DB
  postgres:
    image: postgres:17
    restart: unless-stopped
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-hydroserver}
      POSTGRES_USER: ${POSTGRES_USER:-hsdbadmin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-hsdbadmin} -d ${POSTGRES_DB:-hydroserver}"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  static:
  media:
  web:
  logs:
  pgdata:
