{
	"Version": "2012-10-17",
	"Statement": [
		{
			"Sid": "HydroServerCloudFront",
			"Effect": "Allow",
			"Action": [
				"cloudfront:ListCachePolicies",
				"cloudfront:ListOriginRequestPolicies",
				"cloudfront:GetCachePolicy",
				"cloudfront:GetOriginRequestPolicy",
				"cloudfront:CreateFunction",
				"cloudfront:CreateCloudFrontOriginAccessIdentity",
				"cloudfront:CreateOriginAccessControl",
				"cloudfront:GetCloudFrontOriginAccessIdentity",
				"cloudfront:DeleteCloudFrontOriginAccessIdentity",
				"cloudfront:PublishFunction",
				"cloudfront:DescribeFunction",
				"cloudfront:GetFunction",
				"cloudfront:GetOriginAccessControl",
				"cloudfront:DeleteFunction",
				"cloudfront:DeleteOriginAccessControl",
				"cloudfront:CreateDistribution",
				"cloudfront:TagResource",
				"cloudfront:GetDistribution",
				"cloudfront:ListTagsForResource",
				"cloudfront:DeleteDistribution",
				"cloudfront:UpdateDistribution",
				"cloudfront:ListDistributions",
				"cloudfront:CreateInvalidation",
				"cloudfront:CreatePublicKey",
				"cloudfront:GetPublicKey",
				"cloudfront:DeletePublicKey",
				"cloudfront:CreateKeyGroup",
				"cloudfront:GetKeyGroup",
				"cloudfront:DeleteKeyGroup",
				"wafv2:GetWebACL",
				"wafv2:CreateWebACL",
				"wafv2:TagResource",
				"wafv2:ListTagsForResource",
				"wafv2:DeleteWebACL"
			],
			"Resource": "*"
		},
		{
			"Sid": "HydroServerAppRunner",
			"Effect": "Allow",
			"Action": [
				"apprunner:DescribeService",
				"apprunner:CreateService",
				"apprunner:UpdateService",
				"apprunner:DeleteService",
				"apprunner:DescribeVpcConnector",
				"apprunner:ListVpcConnectors",
				"apprunner:CreateVpcConnector",
				"apprunner:DeleteVpcConnector",
				"apprunner:ListTagsForResource",
				"apprunner:TagResource",
				"apprunner:ListServices",
				"apprunner:StartDeployment"
			],
			"Resource": "*"
		},
		{
			"Sid": "HydroServerS3",
			"Effect": "Allow",
			"Action": [
				"s3:Get*",
				"s3:CreateBucket",
				"s3:DeleteBucket",
				"s3:ListBucket",
				"s3:PutObject",
				"s3:DeleteObject",
				"s3:PutBucketPublicAccessBlock",
				"s3:PutBucketOwnershipControls",
				"s3:PutBucketTagging",
				"s3:PutObjectTagging",
				"s3:PutBucketPolicy",
				"s3:DeleteBucketPolicy"
			],
			"Resource": [
				"arn:aws:s3:::hydroserver-*"
			]
		},
		{
			"Sid": "HydroServerIAM",
			"Effect": "Allow",
			"Action": [
				"iam:GetRole",
				"iam:CreateRole",
				"iam:DeleteRole",
				"iam:TagRole",
				"iam:GetPolicy",
				"iam:GetPolicyVersion",
				"iam:ListPolicyVersions",
				"iam:DeletePolicyVersion",
				"iam:ListRolePolicies",
				"iam:ListAttachedRolePolicies",
				"iam:ListEntitiesForPolicy",
				"iam:ListInstanceProfilesForRole",
				"iam:AttachRolePolicy",
				"iam:DetachRolePolicy",
				"iam:UpdateAssumeRolePolicy",
				"iam:CreatePolicy",
				"iam:DeletePolicy",
				"iam:PutRolePolicy",
				"iam:DeleteRolePolicy",
				"iam:CreatePolicyVersion"
			],
			"Resource": "*"
		},
		{
			"Sid": "HydroServerIAMPassRole",
			"Effect": "Allow",
			"Action": "iam:PassRole",
			"Resource": "*"
		},
		{
			"Sid": "HydroServerIAMServiceRoles",
			"Effect": "Allow",
			"Action": [
				"iam:CreateServiceLinkedRole"
			],
			"Resource": "*",
			"Condition": {
				"StringEquals": {
					"iam:AWSServiceName": "apprunner.amazonaws.com"
				}
			}
		},
		{
			"Sid": "HydroServerRDS",
			"Effect": "Allow",
			"Action": [
				"rds:CreateDBInstance",
				"rds:DeleteDBInstance",
				"rds:DescribeDBInstances",
				"rds:ModifyDBInstance",
				"rds:ModifyDBParameterGroup",
				"rds:DescribeDBParameters",
				"rds:DescribeDBParameterGroups",
				"rds:DeleteDBParameterGroup",
				"rds:CreateDBSubnetGroup",
				"rds:DeleteDBSubnetGroup",
				"rds:DescribeDBSubnetGroups",
				"rds:CreateDBParameterGroup",
				"rds:ListTagsForResource",
				"rds:AddTagsToResource"
			],
			"Resource": "*"
		},
		{
			"Sid": "HydroServerVPC",
			"Effect": "Allow",
			"Action": [
				"ec2:CreateVpc",
				"ec2:DeleteVpc",
				"ec2:DescribeVpcs",
				"ec2:DescribeVpcAttribute",
				"ec2:ModifyVpcAttribute",
				"ec2:CreateTags",
				"ec2:DeleteTags",
				"ec2:DescribeVpcClassicLink",
				"ec2:DescribeVpcClassicLinkDnsSupport",
				"ec2:DescribePrefixLists",
				"ec2:CreateSubnet",
				"ec2:DeleteSubnet",
				"ec2:DescribeSubnets",
				"ec2:ModifySubnetAttribute",
				"ec2:CreateVpcEndpoint",
				"ec2:DescribeVpcEndpoints",
				"ec2:DeleteVpcEndpoints",
				"ec2:CreateSecurityGroup",
				"ec2:DeleteSecurityGroup",
				"ec2:DescribeSecurityGroups",
				"ec2:AuthorizeSecurityGroupIngress",
				"ec2:RevokeSecurityGroupIngress",
				"ec2:AuthorizeSecurityGroupEgress",
				"ec2:RevokeSecurityGroupEgress",
				"ec2:DescribeNetworkInterfaces",
				"ec2:DescribeAvailabilityZones",
				"ec2:DescribeRouteTables",
				"ec2:AssociateRouteTable",
				"ec2:CreateRouteTable",
				"ec2:DeleteRouteTable",
				"ec2:CreateRoute",
				"ec2:DescribeInternetGateways",
				"ec2:CreateInternetGateway",
				"ec2:AttachInternetGateway",
				"ec2:DeleteInternetGateway",
				"ec2:AllocateAddress",
				"ec2:DisassociateRouteTable",
				"ec2:DescribeAddresses",
				"ec2:ReleaseAddress",
				"ec2:DetachInternetGateway",
				"ec2:CreateNatGateway",
				"ec2:DescribeNatGateways",
				"ec2:DeleteNatGateway",
				"ec2:DisassociateAddress"
			],
			"Resource": "*"
		},
		{
			"Sid": "HydroServerECR",
			"Effect": "Allow",
			"Action": [
				"ecr:CreateRepository",
				"ecr:DeleteRepository",
				"ecr:DescribeRepositories",
				"ecr:PutImage",
				"ecr:BatchCheckLayerAvailability",
				"ecr:GetAuthorizationToken",
				"ecr:ListTagsForResource",
				"ecr:InitiateLayerUpload",
				"ecr:UploadLayerPart",
				"ecr:CompleteLayerUpload",
				"ecr:TagResource"
			],
			"Resource": "*"
		},
		{
			"Sid": "HydroServerSecrets",
			"Effect": "Allow",
			"Action": [
				"secretsmanager:GetSecretValue",
				"secretsmanager:DescribeSecret",
				"secretsmanager:ListSecretVersionIds",
				"secretsmanager:CreateSecret",
				"secretsmanager:DeleteSecret",
				"secretsmanager:PutSecretValue",
				"secretsmanager:UpdateSecret",
				"secretsmanager:RestoreSecret",
				"secretsmanager:UpdateSecretVersionStage",
				"secretsmanager:TagResource",
				"secretsmanager:UntagResource",
				"secretsmanager:GetResourcePolicy"
			],
			"Resource": "arn:aws:secretsmanager:*:*:secret:hydroserver-*"
		},
		{
			"Sid": "HydroServerSSM",
			"Effect": "Allow",
			"Action": [
				"ssm:PutParameter",
				"ssm:GetParameter",
				"ssm:GetParameters",
				"ssm:GetParameterHistory",
				"ssm:GetParametersByPath",
				"ssm:DeleteParameter",
				"ssm:DeleteParameters",
				"ssm:DescribeParameters",
				"ssm:AddTagsToResource",
				"ssm:RemoveTagsFromResource",
				"ssm:ListTagsForResource",
				"kms:Encrypt",
				"kms:Decrypt",
				"kms:GenerateDataKey",
				"kms:DescribeKey",
				"kms:ListAliases"
			],
			"Resource": "*"
		}
	]
}